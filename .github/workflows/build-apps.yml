name: Build demo apps

on:
  push:
    branches:
      - main
    paths:
      - 'apps/**'

jobs:
  hello-world:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup qemu
        uses: docker/setup-qemu-action@v3

      - name: setup docker
        uses: docker/setup-buildx-action@v3

      - name: login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker metadata
        uses: docker/metadata-action@v5
        id: hello_world_meta
        with:
          images: |
            ghcr.io/${{ github.repository }}/apps/hello-world
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: /apps/hello-world
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.hello_world_meta.outputs.tags }}
          labels: ${{ steps.hello_world_meta.outputs.labels }}

  probes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup qemu
        uses: docker/setup-qemu-action@v3

      - name: setup docker
        uses: docker/setup-buildx-action@v3

      - name: login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker metadata
        uses: docker/metadata-action@v5
        id: probe_meta
        with:
          images: |
            ghcr.io/${{ github.repository }}/apps/probes
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: /apps/probes
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.probe_meta.outputs.tags }}
          labels: ${{ steps.probe_meta.outputs.labels }}

  blue-green:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup qemu
        uses: docker/setup-qemu-action@v3

      - name: setup docker
        uses: docker/setup-buildx-action@v3

      - name: login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker metadata (blue)
        uses: docker/metadata-action@v5
        id: blue_meta
        with:

          images: |
            ghcr.io/${{ github.repository }}/apps/blue-green
          tags: |
            type=sha,format=long
            type=raw,value=blue

      - name: docker metadata (green)
        uses: docker/metadata-action@v5
        id: green_meta
        with:
          images: |
            ghcr.io/${{ github.repository }}/apps/blue-green
          tags: |
            type=sha,format=long
            type=raw,value=green

      - name: build and push (blue)
        uses: docker/build-push-action@v5
        with:
          context: /apps/blue-green
          platforms: linux/amd64,linux/arm64
          build-args: |
            IS_BLUE=true
          push: true
          tags: ${{ steps.green_meta.outputs.tags }}
          labels: ${{ steps.green_meta.outputs.labels }}

      - name: build and push (green)
        uses: docker/build-push-action@v5
        with:
          context: /apps/blue-green
          platforms: linux/amd64,linux/arm64
          build-args: |
            IS_BLUE=false
          push: true
          tags: ${{ steps.green_meta.outputs.tags }}
          labels: ${{ steps.green_meta.outputs.labels }}

